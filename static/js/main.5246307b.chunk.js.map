{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","console","log","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5246307b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/About\">About</a>\r\n          </li> */}\r\n        \r\n      \r\n        </ul>\r\n        {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'light':'dark'} Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>  \r\n       \r\n    )\r\n}\r\n","import React ,{ useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n\r\n  \r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase!\",\"Success\");\r\n  }\r\n  const handleLoClick = ()=>{\r\n\r\n    console.log(\"LowerCase was Clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n     props.showAlert(\"Converted to LowerCase!\",\"Success\");\r\n  }\r\n  const handleOnChange =(event)=>{\r\n    \r\n    setText(event.target.value);\r\n  }\r\n   const handleClear = ()=>{\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"All Text Cleared!\",\"Success\");\r\n\r\n   }\r\n   const handleCopy =()=>{\r\n     var text = document.getElementById(\"myBox\");\r\n     text.select();\r\n     navigator.clipboard.writeText(text.value);\r\n     props.showAlert(\"All Text Copied!\",\"Success\");\r\n   }\r\n  \r\n  const [text, setText] = useState('');\r\n \r\n    return (\r\n      <> \r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n        <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n    \r\n      <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"9\" style={{backgroundColor: props.mode=='dark'?'#5E5B5B ':'white',color: props.mode=='dark'?'white':'black'}}></textarea>\r\n      </div>\r\n      <div className=\"text-center\">\r\n      <button className=\"btn btn-info mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-danger mx-2\" onClick={handleClear}>Clear Text</button>\r\n      <button className=\"btn btn-warning mx-2\" onClick={handleCopy}>Copy Text</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2 className=\"my-3\">Your Text Summary</h2> \r\n      {(() => {\r\n        if (text==\"\") {\r\n          return (\r\n            <>\r\n            <p>Your Text Has {text.split(\" \").length-1}  words and {text.length} characters.</p>\r\n            <p>{0} Seconds Required to Read.</p>\r\n           <h2>Preview</h2>\r\n           <p>{text}</p>\r\n           </>\r\n          )\r\n        } else {\r\n          return (\r\n            <>\r\n            <p>Your Text Has {text.split(\" \").length}  words and {text.length} characters.</p>\r\n            <p>{0.004 *60* text.split(\" \").length} Seconds Required to Read.</p>\r\n           <h2>Preview</h2>\r\n           <p>{text}</p>\r\n          </>\r\n          )\r\n        }\r\n      })()}\r\n      \r\n    </div>\r\n  </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props){\r\n\r\n    return (\r\n      props.alert && (\r\n        <div>\r\n          <div\r\n            className=\"alert alert-success alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n           \r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n}","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert =(message,type)=>{\n\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n\n      setAlert(null)\n    }, 3000);\n\n  }\n\n  const toggleMode =()=>{\n    if(mode==='light')\n    {\n    setmode('dark');\n    document.body.style.backgroundColor='black';\n    showAlert(\"Dark Mode has Been Enabled\",\"Success\");\n\n    }else\n    {setmode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light Mode has Been Enabled\", \"Success\");\n    }\n  }\n\n\n  return (\n        <>\n    {/* <Router> */}\n    <Navbar title=\"Text Utils\" mode={mode} toggleMode={toggleMode}/>\n     <Alert alert= {alert} />  \n    <div className=\"container my-3\"> \n    {/* <Switch>\n          <Route exact path=\"/About\">\n            \n            <About></About>\n          </Route>\n          \n          <Route exact path=\"/\">\n          \n           </Route>\n        </Switch>\n     */}\n    {/*  */}\n    <TextForm  showAlert={showAlert}heading=\"Enter the text to Analyze \" mode={mode}/>\n    </div>\n    \n    \n    {/* </Router> */}\n    </>\n  );\n\n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}